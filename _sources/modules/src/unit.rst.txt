.. default-domain:: chpl

.. module:: unit

unit
====
**Usage**

.. code-block:: chapel

   use unit;


or

.. code-block:: chapel

   import unit;

.. record:: unit

   .. attribute:: param length: int

   .. attribute:: param mass: int

   .. attribute:: param time: int

   .. attribute:: param electric_current: int

   .. attribute:: param temperature: int

   .. attribute:: param substance: int

   .. attribute:: param luminous_intensity: int

   .. attribute:: const coefficient: real

   .. attribute:: const constant: real

   .. attribute:: var _value: real

   .. attribute:: var symbol: string

   .. method:: proc value(): real

   .. method:: proc getCoefficient(): real

   .. method:: proc getConstant(): real

   .. method:: proc from_base(val: real): real

   .. method:: proc to_base(): real

   .. method:: proc checkDims(other: unit) param

   .. method:: proc convert_to(unitCoefficient: real, unitConstant: real, unitSymbol: string): unit

   .. method:: proc convert_to(unitObj: shared AbstractUnitObj): unit

   .. method:: proc writeThis(f) throws

.. record:: unit_array

   .. attribute:: param length: int

   .. attribute:: param mass: int

   .. attribute:: param time: int

   .. attribute:: param electric_current: int

   .. attribute:: param temperature: int

   .. attribute:: param substance: int

   .. attribute:: param luminous_intensity: int

   .. attribute:: const coefficient: real

   .. attribute:: const constant: real

   .. attribute:: type eltType

   .. attribute:: param rank: int

   .. attribute:: param stridable: bool

   .. attribute:: var dom: domain(rank, stridable = stridable)

   .. attribute:: var arr: [dom] eltType

   .. attribute:: var symbol: string

   .. method:: proc init(param Length: int, param Mass: int, param Time: int, param ElectricCurrent: int, param Temperature: int, param Substance: int, param LuminousIntensity: int, coefficient: real, constant: real, in arr, symbol: string)

   .. method:: proc getArray(): real

   .. method:: proc getCoefficient(): real

   .. method:: proc getConstant(): real

   .. method:: proc from_base(val: real): real

   .. method:: proc to_base(val: real): real

   .. method:: proc checkDims(other: unit_array) param

   .. method:: proc convert_to(unitCoefficient: real, unitConstant: real, unitSymbol: string): unit_array

   .. method:: proc convert_to(unitObj: shared AbstractUnitObj): unit_array

   .. method:: proc writeThis(f) throws

.. function:: proc set_unitSystem(systemName: string): unitregistry

.. function:: proc +(lhs: unit, rhs: unit): unit

.. function:: proc +(lhs: unit_array, rhs: unit_array): unit_array

.. function:: proc -(lhs: unit, rhs: unit): unit

.. function:: proc -(lhs: unit_array, rhs: unit_array): unit_array

.. function:: proc ==(lhs: unit, rhs: unit): bool

.. function:: proc ==(lhs: unit_array, rhs: unit_array): bool

.. function:: proc !=(lhs: unit, rhs: unit): bool

.. function:: proc !=(lhs: unit_array, rhs: unit_array): bool

.. function:: proc *(lhs: real, rhs: unit): unit_array

.. function:: proc *(lhs: real, rhs: unit_array): unit_array

.. function:: proc *(lhs: unit, rhs: unit): unit

.. function:: proc *(lhs: unit_array, rhs: unit_array): unit_array

.. function:: proc /(lhs: unit, rhs: real): unit_array

.. function:: proc /(lhs: unit_array, rhs: real): unit_array

